<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="1" total="36" passed="33">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="251" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="251" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
      <class name="com.sysgears.calculatorserver.kernell.cache.UTestCache">
        <test-method status="PASS" signature="beforeClass()" name="beforeClass" is-config="true" duration-ms="3" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="56" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="testAddToCacheAdd()" name="testAddToCacheAdd" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="testAddToCacheOverflow()" name="testAddToCacheOverflow" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="2" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="testClearCache()" name="testClearCache" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="FAIL" signature="testLoadCache()" name="testLoadCache" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<3.0> but was:<null>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<3.0> but was:<null>
	at org.testng.Assert.fail(Assert.java:89)
	at org.testng.Assert.failNotEquals(Assert.java:489)
	at org.testng.Assert.assertEquals(Assert.java:118)
	at org.testng.Assert.assertEquals(Assert.java:160)
	at com.sysgears.calculatorserver.kernell.cache.UTestCache.testLoadCache(UTestCache.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:76)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:161)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:101)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testSaveCache()" name="testSaveCache" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="2" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="testSearchInCache()" name="testSearchInCache" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
      </class>
      <class name="com.sysgears.calculatorserver.kernell.calculation.UTestCalculator">
        <test-method status="PASS" signature="bracketsCalculateTest()" name="bracketsCalculateTest" duration-ms="6" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="calculateStatementErrorExceptionTest()" name="calculateStatementErrorExceptionTest" duration-ms="5" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <exception class="com.sysgears.calculatorserver.exceptions.StatementErrorException">
            <message>
              <![CDATA[Statement error
]]>
            </message>
            <full-stacktrace>
              <![CDATA[Statement error

	at com.sysgears.calculatorserver.kernell.calculation.Calculator.calculate(Calculator.java:47)
	at com.sysgears.calculatorserver.kernell.calculation.UTestCalculator.calculateStatementErrorExceptionTest(UTestCalculator.java:121)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:76)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:161)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:101)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="calculateTest(java.lang.String)" name="calculateTest" duration-ms="2" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2+4]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="findClothingBracketTest()" name="findClothingBracketTest" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="findClothingBracketTestIllegalArgument()" name="findClothingBracketTestIllegalArgument" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <exception class="java.lang.reflect.InvocationTargetException">
            <full-stacktrace>
              <![CDATA[java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at com.sysgears.calculatorserver.kernell.calculation.UTestCalculator.findClothingBracketTestIllegalArgument(UTestCalculator.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:76)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:161)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:101)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)
Caused by: java.lang.IllegalArgumentException: No brackets
	at com.sysgears.calculatorserver.kernell.calculation.Calculator.findClothingBracket(Calculator.java:210)
	... 40 more
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="subCalculateTest(java.lang.String)" name="subCalculateTest" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5x8]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="subCalculateTest(java.lang.String)" name="subCalculateTest" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[40]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="subCalculateTest(java.lang.String)" name="subCalculateTest" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[80/2]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="validateRegExpTest(java.lang.String)" name="validateRegExpTest" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[(2+3)+17/8)11-(7]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="validateRegExpTest(java.lang.String)" name="validateRegExpTest" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="validateRegExpTest(java.lang.String)" name="validateRegExpTest" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5656+55-44x6569]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="com.sysgears.calculatorserver.server.UTestCalculationThreadFactory">
        <test-method status="PASS" signature="testCreateThread()" name="testCreateThread" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
      </class>
      <class name="com.sysgears.calculatorserver.kernell.cache.UTestSaveLoadCache">
        <test-method status="FAIL" signature="createTestFile()" name="createTestFile" is-config="true" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[No such file or directory]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: No such file or directory
	at java.io.UnixFileSystem.createFileExclusively(Native Method)
	at java.io.File.createNewFile(File.java:947)
	at com.sysgears.calculatorserver.kernell.cache.UTestSaveLoadCache.createTestFile(UTestSaveLoadCache.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:525)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:202)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:130)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:173)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:76)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:161)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:101)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="SKIP" signature="testLoadFile()" name="testLoadFile" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="SKIP" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="SKIP" signature="afterMethod()" name="afterMethod" is-config="true" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="SKIP" signature="testWriteFile()" name="testWriteFile" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="SKIP" signature="beforeMethod()" name="beforeMethod" is-config="true" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="SKIP" signature="afterMethod()" name="afterMethod" is-config="true" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
      </class>
      <class name="com.sysgears.calculatorserver.server.UTestCalculationThread">
        <test-method status="PASS" signature="testGetAndProcessStatement(java.lang.String)" name="testGetAndProcessStatement" duration-ms="10" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2+2]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testGetAndProcessStatement(java.lang.String)" name="testGetAndProcessStatement" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testNormalizeStatement(int, java.lang.String)" name="testNormalizeStatement" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2++2
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testNormalizeStatement(int, java.lang.String)" name="testNormalizeStatement" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2+-2
]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testNormalizeStatement(int, java.lang.String)" name="testNormalizeStatement" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2--2]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testNormalizeStatement(int, java.lang.String)" name="testNormalizeStatement" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2-+2]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testNormalizeStatement(int, java.lang.String)" name="testNormalizeStatement" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[+-2--2]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testNormalizeStatement(int, java.lang.String)" name="testNormalizeStatement" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2+2]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testProcessStatement(java.lang.String)" name="testProcessStatement" duration-ms="3" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2+2]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testProcessStatement(java.lang.String)" name="testProcessStatement" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
      <class name="com.sysgears.calculatorserver.kernell.UTestOperations">
        <test-method status="PASS" signature="testAdd()" name="testAdd" duration-ms="9" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="testDivide()" name="testDivide" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
        <test-method status="PASS" signature="testDivideZeroException()" name="testDivideZeroException" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <exception class="com.sysgears.calculatorserver.exceptions.DivisionByZeroInDoubleException">
            <message>
              <![CDATA[
first operand = 100500.0
second operand = 0.0
]]>
            </message>
            <full-stacktrace>
              <![CDATA[
first operand = 100500.0
second operand = 0.0

	at com.sysgears.calculatorserver.kernell.Operations.divide(Operations.java:56)
	at com.sysgears.calculatorserver.kernell.UTestOperations.testDivideZeroException(UTestOperations.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:842)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1166)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.runWorkers(TestRunner.java:1178)
	at org.testng.TestRunner.privateRun(TestRunner.java:757)
	at org.testng.TestRunner.run(TestRunner.java:608)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1158)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1083)
	at org.testng.TestNG.run(TestNG.java:999)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:76)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:161)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:101)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:115)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:601)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:103)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:74)
]]>
            </full-stacktrace>
          </exception>
        </test-method>
        <test-method status="PASS" signature="testMultiply()" name="testMultiply" duration-ms="0" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
        </test-method>
      </class>
      <class name="com.sysgears.calculatorserver.kernell.calculation.UTestAnswerSearcher">
        <test-method status="PASS" signature="testGetAnswer(java.lang.String)" name="testGetAnswer" duration-ms="107" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[cache]]>
              </value>
            </param>
          </params>
        </test-method>
        <test-method status="PASS" signature="testGetAnswer(java.lang.String)" name="testGetAnswer" duration-ms="1" started-at="2013-04-19T21:53:51Z" finished-at="2013-04-19T21:53:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[foo]]>
              </value>
            </param>
          </params>
        </test-method>
      </class>
    </test>
  </suite>
</testng-results>
